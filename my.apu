from flask import Flask, request, jsonify, render_template_string
import time
import requests

app = Flask(__name__)

# API Constants
FREE_FIRE_API_KEY = 'infoplayertrial_61029305'
FREE_FIRE_API_URL = 'https://drxzsecurityapi.info/api/player/info/{region}/{uid}?key={api_key}'
TELEGRAM_GROUP_LINK = "https://t.me/HPLIKEOPML"

# Function to fetch player info from external API
def fetch_player_info(region, uid, api_key=FREE_FIRE_API_KEY):
    if api_key != FREE_FIRE_API_KEY:
        return {"error": "Invalid API key"}, 403  # Forbidden error
    url = FREE_FIRE_API_URL.format(region=region, uid=uid, api_key=api_key)
    response = requests.get(url)
    if response.status_code == 200:
        return response.json()
    else:
        return {"error": "Player not found"}, 404  # Not found error

# Home route with form for user input
@app.route('/')
def index():
    return '''
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Free Fire Player Info</title>
        </head>
        <body>
            <h1>Free Fire Player Info</h1>
            <form action="/player_info" method="POST">
                <label for="uid">Player ID:</label>
                <input type="text" id="uid" name="uid" required><br><br>

                <label for="region">Region (e.g., us, me):</label>
                <input type="text" id="region" name="region" required><br><br>

                <label for="view_count">Number of Visits:</label>
                <input type="number" id="view_count" name="view_count" value="1" min="1" required><br><br>

                <input type="submit" value="Send Visits">
            </form>
        </body>
        </html>
    '''

# Route to handle form submissions and display results
@app.route('/player_info', methods=['POST'])
def player_info():
    uid = request.form['uid']
    region = request.form['region']
    view_count = int(request.form['view_count'])

    success_count = 0
    error_count = 0
    results = []

    for _ in range(view_count):
        result = fetch_player_info(region, uid)
        if result:
            success_count += 1
            player_name = result.get("nickname", "N/A")
            player_level = result.get("region", "N/A")
            results.append(f"Success: Player {player_name}, Region: {player_level}")
        else:
            error_count += 1
            results.append(f"Error fetching info for UID {uid}.")
        time.sleep(1)  # simulate delay between requests

    # HTML result page with Telegram group link
    return render_template_string(f'''
        <!DOCTYPE html>
        <html lang="en">
        <head>
            <meta charset="UTF-8">
            <meta name="viewport" content="width=device-width, initial-scale=1.0">
            <title>Results</title>
        </head>
        <body>
            <h1>Results</h1>
            <p>Successful Visits: {success_count}</p>
            <p>Errors: {error_count}</p>
            <ul>
                {''.join(f'<li>{result}</li>' for result in results)}
            </ul>
            <p>Join our Telegram group for more tools: <a href="{TELEGRAM_GROUP_LINK}">{TELEGRAM_GROUP_LINK}</a></p>
            <a href="/">Back to Form</a>
        </body>
        </html>
    ''')

# API route for player info lookup
@app.route('/api/player/info/<region>/<uid>', methods=['GET'])
def player_info_api(region, uid):
    api_key = request.args.get('HPCUXI')  # Get API key from query parameters
    result, status_code = fetch_player_info(region, uid, api_key)
    
    # Add Telegram group link in the response
    result['telegram_group'] = TELEGRAM_GROUP_LINK
    return jsonify(result), status_code

if __name__ == '__main__':
    app.run(debug=True)